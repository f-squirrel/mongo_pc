version: '3.8'

services:
  mongodb:
    image: mongo:6.0.14
    init: true
    hostname: mongodb
    user: "${UID}:${GID}"
    command:
      [
        "sh",
        "-c",
        "mongod --replSet rs0 --bind_ip_all --port 27017"
      ]
    healthcheck:
      test:
        [
          "CMD",
          "sh",
          "-c",
          "echo 'try { rs.status() } catch (e) { rs.initiate({_id: \"rs0\", members: [{_id: 0, host: \"mongodb:27017\"}]}) }' | mongosh --quiet --port 27017"
        ]
      interval: 1s
      timeout: 10s
      start_period: 0s
      retries: 5
    ports:
      - 27017:27017
    attach: true

  producer:
    image: ubuntu:latest
    init: true
    depends_on:
      - mongodb
    hostname: producer
    # For memory profiling
    security_opt:
      - seccomp:unconfined
    # For gdb in a container
    cap_add:
      - SYS_PTRACE
    volumes:
      - ../:/producer
    environment:
      - RUST_BACKTRACE=1
      - RUST_LOG=error
      # networks:
      #   inner:
      #     ipv4_address: 2.2.2.60
      # runtools_cluster_net:
      # ipv4_address: 1.1.1.60
    user: "${UID}:${GID}"
    ports:
      - 8082:8080
    working_dir: /producer
    entrypoint: target/debug/examples/main -t producer

  consumer1:
    image: ubuntu:latest
    init: true
    hostname: consumer1
    # # For memory profiling
    # security_opt:
    #   - seccomp:unconfined
    # # For gdb in a container
    # cap_add:
    #   - SYS_PTRACE
    volumes:
      - ../:/consumer1
    environment:
      - RUST_BACKTRACE=1
      - RUST_LOG=error
    user: "${UID}:${GID}"
    working_dir: /consumer1
    entrypoint: target/debug/examples/main -t consumer1
    depends_on:
      - mongodb

  consumer2:
    image: ubuntu:latest
    init: true
    hostname: consumer2
    volumes:
      - ../:/consumer2
    environment:
      - RUST_BACKTRACE=full
      - RUST_LOG=error
    user: "${UID}:${GID}"
    working_dir: /consumer2
    entrypoint: target/debug/examples/main -t consumer2
    depends_on:
      - mongodb

  consumer3:
    image: ubuntu:latest
    init: true
    hostname: consumer3
    volumes:
      - ../:/consumer3
    environment:
      - RUST_BACKTRACE=full
      - RUST_LOG=error
    user: "${UID}:${GID}"
    working_dir: /consumer3
    entrypoint: target/debug/examples/main -t consumer3
    depends_on:
      - mongodb

  subscriber:
    image: ubuntu:latest
    init: true
    hostname: consumer3
    volumes:
      - ../:/consumer3
    environment:
      - RUST_BACKTRACE=full
      - RUST_LOG=info
    user: "${UID}:${GID}"
    working_dir: /consumer3
    entrypoint: target/debug/examples/main -t subscriber
    depends_on:
      - mongodb
